diff --git a/src/lib/Hydra/Helper/GitlabAuth.pm b/src/lib/Hydra/Helper/GitlabAuth.pm
new file mode 100644
index 00000000..f087681f
--- /dev/null
+++ b/src/lib/Hydra/Helper/GitlabAuth.pm
@@ -0,0 +1,19 @@
+package Hydra::Helper::GitlabAuth;
+
+use strict;
+use Exporter;
+
+our @EXPORT = qw(getGitlabAccessToken);
+
+sub getGitlabAccessToken {
+    my $filename = "/var/lib/gitlab_auth.key";
+
+    open(my $fh, $filename)
+        or return undef;
+
+    my $line = <$fh>;
+    chomp $line;
+    return $line;
+}
+
+1;
diff --git a/src/lib/Hydra/Plugin/GitlabPulls.pm b/src/lib/Hydra/Plugin/GitlabPulls.pm
index b44a1a98..6d0861fa 100644
--- a/src/lib/Hydra/Plugin/GitlabPulls.pm
+++ b/src/lib/Hydra/Plugin/GitlabPulls.pm
@@ -20,6 +20,7 @@ use HTTP::Request;
 use LWP::UserAgent;
 use JSON;
 use Hydra::Helper::CatalystUtils;
+use Hydra::Helper::GitlabAuth;
 use File::Temp;
 use POSIX qw(strftime);
 
@@ -66,7 +67,7 @@ sub fetchInput {
     (my $baseUrl, my $projectId) = split ' ', $value;
     my $url = "$baseUrl/api/v4/projects/$projectId/merge_requests?per_page=100&state=opened";
 
-    my $accessToken = $self->{config}->{gitlab_authorization}->{$projectId};
+    my $accessToken = Hydra::Helper::GitlabAuth::getGitlabAccessToken();
 
     my %pulls;
     my $ua = LWP::UserAgent->new();
diff --git a/src/lib/Hydra/Plugin/GitlabStatus.pm b/src/lib/Hydra/Plugin/GitlabStatus.pm
index ccbeb8d7..140439c3 100644
--- a/src/lib/Hydra/Plugin/GitlabStatus.pm
+++ b/src/lib/Hydra/Plugin/GitlabStatus.pm
@@ -6,6 +6,7 @@ use HTTP::Request;
 use JSON;
 use LWP::UserAgent;
 use Hydra::Helper::CatalystUtils;
+use Hydra::Helper::GitlabAuth;
 use List::Util qw(max);
 
 # This plugin expects as inputs to a jobset the following:
@@ -18,7 +19,7 @@ use List::Util qw(max);
 
 sub isEnabled {
     my ($self) = @_;
-    return defined $self->{config}->{gitlab_authorization};
+    return defined Hydra::Helper::GitlabAuth::getGitlabAccessToken();
 }
 
 sub toGitlabState {
@@ -63,7 +64,7 @@ sub common {
             my $i = $eval->jobsetevalinputs->find({ name => $gitlabstatusInput->value, altnr => 0 });
             next unless defined $i;
             my $projectId = $eval->jobsetevalinputs->find({ name => "gitlab_project_id" })->value;
-            my $accessToken = $self->{config}->{gitlab_authorization}->{$projectId};
+            my $accessToken = Hydra::Helper::GitlabAuth::getGitlabAccessToken();
             my $rev = $i->revision;
             my $domain = URI->new($i->uri)->host;
             my $url = "https://$domain/api/v4/projects/$projectId/statuses/$rev";
